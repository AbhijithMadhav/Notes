Terminals unused in grammar

   ERROR


Grammar

    0 $accept: program $end

    1 program: class_list

    2 class_list: class
    3           | class_list class

    4 class: CLASS TYPEID '{' feature_list '}' ';'
    5      | CLASS TYPEID INHERITS TYPEID '{' feature_list '}' ';'
    6      | error ';'

    7 feature_list: /* empty */
    8             | feature_list feature

    9 feature: OBJECTID '(' formal_list ')' ':' TYPEID '{' expression '}' ';'
   10        | OBJECTID '(' ')' ':' TYPEID '{' expression '}' ';'
   11        | OBJECTID ':' TYPEID ASSIGN expression ';'
   12        | OBJECTID ':' TYPEID ';'
   13        | error ';'

   14 formal_list: formal
   15            | formal_list ',' formal

   16 formal: OBJECTID ':' TYPEID

   17 expression: OBJECTID ASSIGN expression
   18           | expression '@' TYPEID '.' OBJECTID '(' comma_separated_expression_list ')'
   19           | expression '.' OBJECTID '(' comma_separated_expression_list ')'
   20           | OBJECTID '(' comma_separated_expression_list ')'
   21           | IF expression THEN expression ELSE expression FI
   22           | WHILE expression LOOP expression POOL
   23           | '{' semicolon_separated_expression_list '}'
   24           | LET OBJECTID ':' TYPEID nested_let
   25           | LET OBJECTID ':' TYPEID ASSIGN expression nested_let
   26           | LET error nested_let
   27           | CASE expression OF typcase_list ESAC
   28           | NEW TYPEID
   29           | ISVOID expression
   30           | expression '+' expression
   31           | expression '-' expression
   32           | expression '*' expression
   33           | expression '/' expression
   34           | '~' expression
   35           | expression '<' expression
   36           | expression LE expression
   37           | expression '=' expression
   38           | NOT expression
   39           | '(' expression ')'
   40           | OBJECTID
   41           | INT_CONST
   42           | STR_CONST
   43           | BOOL_CONST

   44 comma_separated_expression_list: /* empty */
   45                                | expression
   46                                | comma_separated_expression_list ',' expression

   47 semicolon_separated_expression_list: expression ';'
   48                                    | semicolon_separated_expression_list expression ';'
   49                                    | error ';'

   50 typcase: OBJECTID ':' TYPEID DARROW expression ';'

   51 typcase_list: typcase
   52             | typcase_list typcase

   53 nested_let: IN expression
   54           | ',' OBJECTID ':' TYPEID nested_let
   55           | ',' OBJECTID ':' TYPEID ASSIGN expression nested_let


Terminals, with rules where they appear

$end (0) 0
'(' (40) 9 10 18 19 20 39
')' (41) 9 10 18 19 20 39
'*' (42) 32
'+' (43) 30
',' (44) 15 46 54 55
'-' (45) 31
'.' (46) 18 19
'/' (47) 33
':' (58) 9 10 11 12 16 24 25 50 54 55
';' (59) 4 5 6 9 10 11 12 13 47 48 49 50
'<' (60) 35
'=' (61) 37
'@' (64) 18
'{' (123) 4 5 9 10 23
'}' (125) 4 5 9 10 23
'~' (126) 34
error (256) 6 13 26 49
CLASS (258) 4 5
ELSE (259) 21
FI (260) 21
IF (261) 21
IN (262) 53
INHERITS (263) 5
LET (264) 24 25 26
LOOP (265) 22
POOL (266) 22
THEN (267) 21
WHILE (268) 22
CASE (269) 27
ESAC (270) 27
OF (271) 27
DARROW (272) 50
NEW (273) 28
ISVOID (274) 29
STR_CONST (275) 42
INT_CONST (276) 41
BOOL_CONST (277) 43
TYPEID (278) 4 5 9 10 11 12 16 18 24 25 28 50 54 55
OBJECTID (279) 9 10 11 12 16 17 18 19 20 24 25 40 50 54 55
ASSIGN (280) 11 17 25 55
NOT (281) 38
LE (282) 36
ERROR (283)
LET_PREC (285)
PAREN (286)


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
program (48)
    on left: 1, on right: 0
class_list (49)
    on left: 2 3, on right: 1 3
class (50)
    on left: 4 5 6, on right: 2 3
feature_list (51)
    on left: 7 8, on right: 4 5 8
feature (52)
    on left: 9 10 11 12 13, on right: 8
formal_list (53)
    on left: 14 15, on right: 9 15
formal (54)
    on left: 16, on right: 14 15
expression (55)
    on left: 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34
    35 36 37 38 39 40 41 42 43, on right: 9 10 11 17 18 19 21 22 25
    27 29 30 31 32 33 34 35 36 37 38 39 45 46 47 48 50 53 55
comma_separated_expression_list (56)
    on left: 44 45 46, on right: 18 19 20 46
semicolon_separated_expression_list (57)
    on left: 47 48 49, on right: 23 48
typcase (58)
    on left: 50, on right: 51 52
typcase_list (59)
    on left: 51 52, on right: 27 52
nested_let (60)
    on left: 53 54 55, on right: 24 25 26 54 55


state 0

    0 $accept: . program $end

    error  shift, and go to state 1
    CLASS  shift, and go to state 2

    program     go to state 3
    class_list  go to state 4
    class       go to state 5


state 1

    6 class: error . ';'

    ';'  shift, and go to state 6


state 2

    4 class: CLASS . TYPEID '{' feature_list '}' ';'
    5      | CLASS . TYPEID INHERITS TYPEID '{' feature_list '}' ';'

    TYPEID  shift, and go to state 7


state 3

    0 $accept: program . $end

    $end  shift, and go to state 8


state 4

    1 program: class_list .
    3 class_list: class_list . class

    error  shift, and go to state 1
    CLASS  shift, and go to state 2

    $end  reduce using rule 1 (program)

    class  go to state 9


state 5

    2 class_list: class .

    $default  reduce using rule 2 (class_list)


state 6

    6 class: error ';' .

    $default  reduce using rule 6 (class)


state 7

    4 class: CLASS TYPEID . '{' feature_list '}' ';'
    5      | CLASS TYPEID . INHERITS TYPEID '{' feature_list '}' ';'

    INHERITS  shift, and go to state 10
    '{'       shift, and go to state 11


state 8

    0 $accept: program $end .

    $default  accept


state 9

    3 class_list: class_list class .

    $default  reduce using rule 3 (class_list)


state 10

    5 class: CLASS TYPEID INHERITS . TYPEID '{' feature_list '}' ';'

    TYPEID  shift, and go to state 12


state 11

    4 class: CLASS TYPEID '{' . feature_list '}' ';'

    $default  reduce using rule 7 (feature_list)

    feature_list  go to state 13


state 12

    5 class: CLASS TYPEID INHERITS TYPEID . '{' feature_list '}' ';'

    '{'  shift, and go to state 14


state 13

    4 class: CLASS TYPEID '{' feature_list . '}' ';'
    8 feature_list: feature_list . feature

    error     shift, and go to state 15
    OBJECTID  shift, and go to state 16
    '}'       shift, and go to state 17

    feature  go to state 18


state 14

    5 class: CLASS TYPEID INHERITS TYPEID '{' . feature_list '}' ';'

    $default  reduce using rule 7 (feature_list)

    feature_list  go to state 19


state 15

   13 feature: error . ';'

    ';'  shift, and go to state 20


state 16

    9 feature: OBJECTID . '(' formal_list ')' ':' TYPEID '{' expression '}' ';'
   10        | OBJECTID . '(' ')' ':' TYPEID '{' expression '}' ';'
   11        | OBJECTID . ':' TYPEID ASSIGN expression ';'
   12        | OBJECTID . ':' TYPEID ';'

    '('  shift, and go to state 21
    ':'  shift, and go to state 22


state 17

    4 class: CLASS TYPEID '{' feature_list '}' . ';'

    ';'  shift, and go to state 23


state 18

    8 feature_list: feature_list feature .

    $default  reduce using rule 8 (feature_list)


state 19

    5 class: CLASS TYPEID INHERITS TYPEID '{' feature_list . '}' ';'
    8 feature_list: feature_list . feature

    error     shift, and go to state 15
    OBJECTID  shift, and go to state 16
    '}'       shift, and go to state 24

    feature  go to state 18


state 20

   13 feature: error ';' .

    $default  reduce using rule 13 (feature)


state 21

    9 feature: OBJECTID '(' . formal_list ')' ':' TYPEID '{' expression '}' ';'
   10        | OBJECTID '(' . ')' ':' TYPEID '{' expression '}' ';'

    OBJECTID  shift, and go to state 25
    ')'       shift, and go to state 26

    formal_list  go to state 27
    formal       go to state 28


state 22

   11 feature: OBJECTID ':' . TYPEID ASSIGN expression ';'
   12        | OBJECTID ':' . TYPEID ';'

    TYPEID  shift, and go to state 29


state 23

    4 class: CLASS TYPEID '{' feature_list '}' ';' .

    $default  reduce using rule 4 (class)


state 24

    5 class: CLASS TYPEID INHERITS TYPEID '{' feature_list '}' . ';'

    ';'  shift, and go to state 30


state 25

   16 formal: OBJECTID . ':' TYPEID

    ':'  shift, and go to state 31


state 26

   10 feature: OBJECTID '(' ')' . ':' TYPEID '{' expression '}' ';'

    ':'  shift, and go to state 32


state 27

    9 feature: OBJECTID '(' formal_list . ')' ':' TYPEID '{' expression '}' ';'
   15 formal_list: formal_list . ',' formal

    ')'  shift, and go to state 33
    ','  shift, and go to state 34


state 28

   14 formal_list: formal .

    $default  reduce using rule 14 (formal_list)


state 29

   11 feature: OBJECTID ':' TYPEID . ASSIGN expression ';'
   12        | OBJECTID ':' TYPEID . ';'

    ASSIGN  shift, and go to state 35
    ';'     shift, and go to state 36


state 30

    5 class: CLASS TYPEID INHERITS TYPEID '{' feature_list '}' ';' .

    $default  reduce using rule 5 (class)


state 31

   16 formal: OBJECTID ':' . TYPEID

    TYPEID  shift, and go to state 37


state 32

   10 feature: OBJECTID '(' ')' ':' . TYPEID '{' expression '}' ';'

    TYPEID  shift, and go to state 38


state 33

    9 feature: OBJECTID '(' formal_list ')' . ':' TYPEID '{' expression '}' ';'

    ':'  shift, and go to state 39


state 34

   15 formal_list: formal_list ',' . formal

    OBJECTID  shift, and go to state 25

    formal  go to state 40


state 35

   11 feature: OBJECTID ':' TYPEID ASSIGN . expression ';'

    IF          shift, and go to state 41
    LET         shift, and go to state 42
    WHILE       shift, and go to state 43
    CASE        shift, and go to state 44
    NEW         shift, and go to state 45
    ISVOID      shift, and go to state 46
    STR_CONST   shift, and go to state 47
    INT_CONST   shift, and go to state 48
    BOOL_CONST  shift, and go to state 49
    OBJECTID    shift, and go to state 50
    NOT         shift, and go to state 51
    '~'         shift, and go to state 52
    '{'         shift, and go to state 53
    '('         shift, and go to state 54

    expression  go to state 55


state 36

   12 feature: OBJECTID ':' TYPEID ';' .

    $default  reduce using rule 12 (feature)


state 37

   16 formal: OBJECTID ':' TYPEID .

    $default  reduce using rule 16 (formal)


state 38

   10 feature: OBJECTID '(' ')' ':' TYPEID . '{' expression '}' ';'

    '{'  shift, and go to state 56


state 39

    9 feature: OBJECTID '(' formal_list ')' ':' . TYPEID '{' expression '}' ';'

    TYPEID  shift, and go to state 57


state 40

   15 formal_list: formal_list ',' formal .

    $default  reduce using rule 15 (formal_list)


state 41

   21 expression: IF . expression THEN expression ELSE expression FI

    IF          shift, and go to state 41
    LET         shift, and go to state 42
    WHILE       shift, and go to state 43
    CASE        shift, and go to state 44
    NEW         shift, and go to state 45
    ISVOID      shift, and go to state 46
    STR_CONST   shift, and go to state 47
    INT_CONST   shift, and go to state 48
    BOOL_CONST  shift, and go to state 49
    OBJECTID    shift, and go to state 50
    NOT         shift, and go to state 51
    '~'         shift, and go to state 52
    '{'         shift, and go to state 53
    '('         shift, and go to state 54

    expression  go to state 58


state 42

   24 expression: LET . OBJECTID ':' TYPEID nested_let
   25           | LET . OBJECTID ':' TYPEID ASSIGN expression nested_let
   26           | LET . error nested_let

    error     shift, and go to state 59
    OBJECTID  shift, and go to state 60


state 43

   22 expression: WHILE . expression LOOP expression POOL

    IF          shift, and go to state 41
    LET         shift, and go to state 42
    WHILE       shift, and go to state 43
    CASE        shift, and go to state 44
    NEW         shift, and go to state 45
    ISVOID      shift, and go to state 46
    STR_CONST   shift, and go to state 47
    INT_CONST   shift, and go to state 48
    BOOL_CONST  shift, and go to state 49
    OBJECTID    shift, and go to state 50
    NOT         shift, and go to state 51
    '~'         shift, and go to state 52
    '{'         shift, and go to state 53
    '('         shift, and go to state 54

    expression  go to state 61


state 44

   27 expression: CASE . expression OF typcase_list ESAC

    IF          shift, and go to state 41
    LET         shift, and go to state 42
    WHILE       shift, and go to state 43
    CASE        shift, and go to state 44
    NEW         shift, and go to state 45
    ISVOID      shift, and go to state 46
    STR_CONST   shift, and go to state 47
    INT_CONST   shift, and go to state 48
    BOOL_CONST  shift, and go to state 49
    OBJECTID    shift, and go to state 50
    NOT         shift, and go to state 51
    '~'         shift, and go to state 52
    '{'         shift, and go to state 53
    '('         shift, and go to state 54

    expression  go to state 62


state 45

   28 expression: NEW . TYPEID

    TYPEID  shift, and go to state 63


state 46

   29 expression: ISVOID . expression

    IF          shift, and go to state 41
    LET         shift, and go to state 42
    WHILE       shift, and go to state 43
    CASE        shift, and go to state 44
    NEW         shift, and go to state 45
    ISVOID      shift, and go to state 46
    STR_CONST   shift, and go to state 47
    INT_CONST   shift, and go to state 48
    BOOL_CONST  shift, and go to state 49
    OBJECTID    shift, and go to state 50
    NOT         shift, and go to state 51
    '~'         shift, and go to state 52
    '{'         shift, and go to state 53
    '('         shift, and go to state 54

    expression  go to state 64


state 47

   42 expression: STR_CONST .

    $default  reduce using rule 42 (expression)


state 48

   41 expression: INT_CONST .

    $default  reduce using rule 41 (expression)


state 49

   43 expression: BOOL_CONST .

    $default  reduce using rule 43 (expression)


state 50

   17 expression: OBJECTID . ASSIGN expression
   20           | OBJECTID . '(' comma_separated_expression_list ')'
   40           | OBJECTID .

    ASSIGN  shift, and go to state 65
    '('     shift, and go to state 66

    $default  reduce using rule 40 (expression)


state 51

   38 expression: NOT . expression

    IF          shift, and go to state 41
    LET         shift, and go to state 42
    WHILE       shift, and go to state 43
    CASE        shift, and go to state 44
    NEW         shift, and go to state 45
    ISVOID      shift, and go to state 46
    STR_CONST   shift, and go to state 47
    INT_CONST   shift, and go to state 48
    BOOL_CONST  shift, and go to state 49
    OBJECTID    shift, and go to state 50
    NOT         shift, and go to state 51
    '~'         shift, and go to state 52
    '{'         shift, and go to state 53
    '('         shift, and go to state 54

    expression  go to state 67


state 52

   34 expression: '~' . expression

    IF          shift, and go to state 41
    LET         shift, and go to state 42
    WHILE       shift, and go to state 43
    CASE        shift, and go to state 44
    NEW         shift, and go to state 45
    ISVOID      shift, and go to state 46
    STR_CONST   shift, and go to state 47
    INT_CONST   shift, and go to state 48
    BOOL_CONST  shift, and go to state 49
    OBJECTID    shift, and go to state 50
    NOT         shift, and go to state 51
    '~'         shift, and go to state 52
    '{'         shift, and go to state 53
    '('         shift, and go to state 54

    expression  go to state 68


state 53

   23 expression: '{' . semicolon_separated_expression_list '}'

    error       shift, and go to state 69
    IF          shift, and go to state 41
    LET         shift, and go to state 42
    WHILE       shift, and go to state 43
    CASE        shift, and go to state 44
    NEW         shift, and go to state 45
    ISVOID      shift, and go to state 46
    STR_CONST   shift, and go to state 47
    INT_CONST   shift, and go to state 48
    BOOL_CONST  shift, and go to state 49
    OBJECTID    shift, and go to state 50
    NOT         shift, and go to state 51
    '~'         shift, and go to state 52
    '{'         shift, and go to state 53
    '('         shift, and go to state 54

    expression                           go to state 70
    semicolon_separated_expression_list  go to state 71


state 54

   39 expression: '(' . expression ')'

    IF          shift, and go to state 41
    LET         shift, and go to state 42
    WHILE       shift, and go to state 43
    CASE        shift, and go to state 44
    NEW         shift, and go to state 45
    ISVOID      shift, and go to state 46
    STR_CONST   shift, and go to state 47
    INT_CONST   shift, and go to state 48
    BOOL_CONST  shift, and go to state 49
    OBJECTID    shift, and go to state 50
    NOT         shift, and go to state 51
    '~'         shift, and go to state 52
    '{'         shift, and go to state 53
    '('         shift, and go to state 54

    expression  go to state 72


state 55

   11 feature: OBJECTID ':' TYPEID ASSIGN expression . ';'
   18 expression: expression . '@' TYPEID '.' OBJECTID '(' comma_separated_expression_list ')'
   19           | expression . '.' OBJECTID '(' comma_separated_expression_list ')'
   30           | expression . '+' expression
   31           | expression . '-' expression
   32           | expression . '*' expression
   33           | expression . '/' expression
   35           | expression . '<' expression
   36           | expression . LE expression
   37           | expression . '=' expression

    LE   shift, and go to state 73
    '<'  shift, and go to state 74
    '='  shift, and go to state 75
    '+'  shift, and go to state 76
    '-'  shift, and go to state 77
    '*'  shift, and go to state 78
    '/'  shift, and go to state 79
    '@'  shift, and go to state 80
    '.'  shift, and go to state 81
    ';'  shift, and go to state 82


state 56

   10 feature: OBJECTID '(' ')' ':' TYPEID '{' . expression '}' ';'

    IF          shift, and go to state 41
    LET         shift, and go to state 42
    WHILE       shift, and go to state 43
    CASE        shift, and go to state 44
    NEW         shift, and go to state 45
    ISVOID      shift, and go to state 46
    STR_CONST   shift, and go to state 47
    INT_CONST   shift, and go to state 48
    BOOL_CONST  shift, and go to state 49
    OBJECTID    shift, and go to state 50
    NOT         shift, and go to state 51
    '~'         shift, and go to state 52
    '{'         shift, and go to state 53
    '('         shift, and go to state 54

    expression  go to state 83


state 57

    9 feature: OBJECTID '(' formal_list ')' ':' TYPEID . '{' expression '}' ';'

    '{'  shift, and go to state 84


state 58

   18 expression: expression . '@' TYPEID '.' OBJECTID '(' comma_separated_expression_list ')'
   19           | expression . '.' OBJECTID '(' comma_separated_expression_list ')'
   21           | IF expression . THEN expression ELSE expression FI
   30           | expression . '+' expression
   31           | expression . '-' expression
   32           | expression . '*' expression
   33           | expression . '/' expression
   35           | expression . '<' expression
   36           | expression . LE expression
   37           | expression . '=' expression

    THEN  shift, and go to state 85
    LE    shift, and go to state 73
    '<'   shift, and go to state 74
    '='   shift, and go to state 75
    '+'   shift, and go to state 76
    '-'   shift, and go to state 77
    '*'   shift, and go to state 78
    '/'   shift, and go to state 79
    '@'   shift, and go to state 80
    '.'   shift, and go to state 81


state 59

   26 expression: LET error . nested_let

    IN   shift, and go to state 86
    ','  shift, and go to state 87

    nested_let  go to state 88


state 60

   24 expression: LET OBJECTID . ':' TYPEID nested_let
   25           | LET OBJECTID . ':' TYPEID ASSIGN expression nested_let

    ':'  shift, and go to state 89


state 61

   18 expression: expression . '@' TYPEID '.' OBJECTID '(' comma_separated_expression_list ')'
   19           | expression . '.' OBJECTID '(' comma_separated_expression_list ')'
   22           | WHILE expression . LOOP expression POOL
   30           | expression . '+' expression
   31           | expression . '-' expression
   32           | expression . '*' expression
   33           | expression . '/' expression
   35           | expression . '<' expression
   36           | expression . LE expression
   37           | expression . '=' expression

    LOOP  shift, and go to state 90
    LE    shift, and go to state 73
    '<'   shift, and go to state 74
    '='   shift, and go to state 75
    '+'   shift, and go to state 76
    '-'   shift, and go to state 77
    '*'   shift, and go to state 78
    '/'   shift, and go to state 79
    '@'   shift, and go to state 80
    '.'   shift, and go to state 81


state 62

   18 expression: expression . '@' TYPEID '.' OBJECTID '(' comma_separated_expression_list ')'
   19           | expression . '.' OBJECTID '(' comma_separated_expression_list ')'
   27           | CASE expression . OF typcase_list ESAC
   30           | expression . '+' expression
   31           | expression . '-' expression
   32           | expression . '*' expression
   33           | expression . '/' expression
   35           | expression . '<' expression
   36           | expression . LE expression
   37           | expression . '=' expression

    OF   shift, and go to state 91
    LE   shift, and go to state 73
    '<'  shift, and go to state 74
    '='  shift, and go to state 75
    '+'  shift, and go to state 76
    '-'  shift, and go to state 77
    '*'  shift, and go to state 78
    '/'  shift, and go to state 79
    '@'  shift, and go to state 80
    '.'  shift, and go to state 81


state 63

   28 expression: NEW TYPEID .

    $default  reduce using rule 28 (expression)


state 64

   18 expression: expression . '@' TYPEID '.' OBJECTID '(' comma_separated_expression_list ')'
   19           | expression . '.' OBJECTID '(' comma_separated_expression_list ')'
   29           | ISVOID expression .
   30           | expression . '+' expression
   31           | expression . '-' expression
   32           | expression . '*' expression
   33           | expression . '/' expression
   35           | expression . '<' expression
   36           | expression . LE expression
   37           | expression . '=' expression

    '@'  shift, and go to state 80
    '.'  shift, and go to state 81

    $default  reduce using rule 29 (expression)


state 65

   17 expression: OBJECTID ASSIGN . expression

    IF          shift, and go to state 41
    LET         shift, and go to state 42
    WHILE       shift, and go to state 43
    CASE        shift, and go to state 44
    NEW         shift, and go to state 45
    ISVOID      shift, and go to state 46
    STR_CONST   shift, and go to state 47
    INT_CONST   shift, and go to state 48
    BOOL_CONST  shift, and go to state 49
    OBJECTID    shift, and go to state 50
    NOT         shift, and go to state 51
    '~'         shift, and go to state 52
    '{'         shift, and go to state 53
    '('         shift, and go to state 54

    expression  go to state 92


state 66

   20 expression: OBJECTID '(' . comma_separated_expression_list ')'

    IF          shift, and go to state 41
    LET         shift, and go to state 42
    WHILE       shift, and go to state 43
    CASE        shift, and go to state 44
    NEW         shift, and go to state 45
    ISVOID      shift, and go to state 46
    STR_CONST   shift, and go to state 47
    INT_CONST   shift, and go to state 48
    BOOL_CONST  shift, and go to state 49
    OBJECTID    shift, and go to state 50
    NOT         shift, and go to state 51
    '~'         shift, and go to state 52
    '{'         shift, and go to state 53
    '('         shift, and go to state 54

    $default  reduce using rule 44 (comma_separated_expression_list)

    expression                       go to state 93
    comma_separated_expression_list  go to state 94


state 67

   18 expression: expression . '@' TYPEID '.' OBJECTID '(' comma_separated_expression_list ')'
   19           | expression . '.' OBJECTID '(' comma_separated_expression_list ')'
   30           | expression . '+' expression
   31           | expression . '-' expression
   32           | expression . '*' expression
   33           | expression . '/' expression
   35           | expression . '<' expression
   36           | expression . LE expression
   37           | expression . '=' expression
   38           | NOT expression .

    LE   shift, and go to state 73
    '<'  shift, and go to state 74
    '='  shift, and go to state 75
    '+'  shift, and go to state 76
    '-'  shift, and go to state 77
    '*'  shift, and go to state 78
    '/'  shift, and go to state 79
    '@'  shift, and go to state 80
    '.'  shift, and go to state 81

    $default  reduce using rule 38 (expression)


state 68

   18 expression: expression . '@' TYPEID '.' OBJECTID '(' comma_separated_expression_list ')'
   19           | expression . '.' OBJECTID '(' comma_separated_expression_list ')'
   30           | expression . '+' expression
   31           | expression . '-' expression
   32           | expression . '*' expression
   33           | expression . '/' expression
   34           | '~' expression .
   35           | expression . '<' expression
   36           | expression . LE expression
   37           | expression . '=' expression

    '@'  shift, and go to state 80
    '.'  shift, and go to state 81

    $default  reduce using rule 34 (expression)


state 69

   49 semicolon_separated_expression_list: error . ';'

    ';'  shift, and go to state 95


state 70

   18 expression: expression . '@' TYPEID '.' OBJECTID '(' comma_separated_expression_list ')'
   19           | expression . '.' OBJECTID '(' comma_separated_expression_list ')'
   30           | expression . '+' expression
   31           | expression . '-' expression
   32           | expression . '*' expression
   33           | expression . '/' expression
   35           | expression . '<' expression
   36           | expression . LE expression
   37           | expression . '=' expression
   47 semicolon_separated_expression_list: expression . ';'

    LE   shift, and go to state 73
    '<'  shift, and go to state 74
    '='  shift, and go to state 75
    '+'  shift, and go to state 76
    '-'  shift, and go to state 77
    '*'  shift, and go to state 78
    '/'  shift, and go to state 79
    '@'  shift, and go to state 80
    '.'  shift, and go to state 81
    ';'  shift, and go to state 96


state 71

   23 expression: '{' semicolon_separated_expression_list . '}'
   48 semicolon_separated_expression_list: semicolon_separated_expression_list . expression ';'

    IF          shift, and go to state 41
    LET         shift, and go to state 42
    WHILE       shift, and go to state 43
    CASE        shift, and go to state 44
    NEW         shift, and go to state 45
    ISVOID      shift, and go to state 46
    STR_CONST   shift, and go to state 47
    INT_CONST   shift, and go to state 48
    BOOL_CONST  shift, and go to state 49
    OBJECTID    shift, and go to state 50
    NOT         shift, and go to state 51
    '~'         shift, and go to state 52
    '{'         shift, and go to state 53
    '}'         shift, and go to state 97
    '('         shift, and go to state 54

    expression  go to state 98


state 72

   18 expression: expression . '@' TYPEID '.' OBJECTID '(' comma_separated_expression_list ')'
   19           | expression . '.' OBJECTID '(' comma_separated_expression_list ')'
   30           | expression . '+' expression
   31           | expression . '-' expression
   32           | expression . '*' expression
   33           | expression . '/' expression
   35           | expression . '<' expression
   36           | expression . LE expression
   37           | expression . '=' expression
   39           | '(' expression . ')'

    LE   shift, and go to state 73
    '<'  shift, and go to state 74
    '='  shift, and go to state 75
    '+'  shift, and go to state 76
    '-'  shift, and go to state 77
    '*'  shift, and go to state 78
    '/'  shift, and go to state 79
    '@'  shift, and go to state 80
    '.'  shift, and go to state 81
    ')'  shift, and go to state 99


state 73

   36 expression: expression LE . expression

    IF          shift, and go to state 41
    LET         shift, and go to state 42
    WHILE       shift, and go to state 43
    CASE        shift, and go to state 44
    NEW         shift, and go to state 45
    ISVOID      shift, and go to state 46
    STR_CONST   shift, and go to state 47
    INT_CONST   shift, and go to state 48
    BOOL_CONST  shift, and go to state 49
    OBJECTID    shift, and go to state 50
    NOT         shift, and go to state 51
    '~'         shift, and go to state 52
    '{'         shift, and go to state 53
    '('         shift, and go to state 54

    expression  go to state 100


state 74

   35 expression: expression '<' . expression

    IF          shift, and go to state 41
    LET         shift, and go to state 42
    WHILE       shift, and go to state 43
    CASE        shift, and go to state 44
    NEW         shift, and go to state 45
    ISVOID      shift, and go to state 46
    STR_CONST   shift, and go to state 47
    INT_CONST   shift, and go to state 48
    BOOL_CONST  shift, and go to state 49
    OBJECTID    shift, and go to state 50
    NOT         shift, and go to state 51
    '~'         shift, and go to state 52
    '{'         shift, and go to state 53
    '('         shift, and go to state 54

    expression  go to state 101


state 75

   37 expression: expression '=' . expression

    IF          shift, and go to state 41
    LET         shift, and go to state 42
    WHILE       shift, and go to state 43
    CASE        shift, and go to state 44
    NEW         shift, and go to state 45
    ISVOID      shift, and go to state 46
    STR_CONST   shift, and go to state 47
    INT_CONST   shift, and go to state 48
    BOOL_CONST  shift, and go to state 49
    OBJECTID    shift, and go to state 50
    NOT         shift, and go to state 51
    '~'         shift, and go to state 52
    '{'         shift, and go to state 53
    '('         shift, and go to state 54

    expression  go to state 102


state 76

   30 expression: expression '+' . expression

    IF          shift, and go to state 41
    LET         shift, and go to state 42
    WHILE       shift, and go to state 43
    CASE        shift, and go to state 44
    NEW         shift, and go to state 45
    ISVOID      shift, and go to state 46
    STR_CONST   shift, and go to state 47
    INT_CONST   shift, and go to state 48
    BOOL_CONST  shift, and go to state 49
    OBJECTID    shift, and go to state 50
    NOT         shift, and go to state 51
    '~'         shift, and go to state 52
    '{'         shift, and go to state 53
    '('         shift, and go to state 54

    expression  go to state 103


state 77

   31 expression: expression '-' . expression

    IF          shift, and go to state 41
    LET         shift, and go to state 42
    WHILE       shift, and go to state 43
    CASE        shift, and go to state 44
    NEW         shift, and go to state 45
    ISVOID      shift, and go to state 46
    STR_CONST   shift, and go to state 47
    INT_CONST   shift, and go to state 48
    BOOL_CONST  shift, and go to state 49
    OBJECTID    shift, and go to state 50
    NOT         shift, and go to state 51
    '~'         shift, and go to state 52
    '{'         shift, and go to state 53
    '('         shift, and go to state 54

    expression  go to state 104


state 78

   32 expression: expression '*' . expression

    IF          shift, and go to state 41
    LET         shift, and go to state 42
    WHILE       shift, and go to state 43
    CASE        shift, and go to state 44
    NEW         shift, and go to state 45
    ISVOID      shift, and go to state 46
    STR_CONST   shift, and go to state 47
    INT_CONST   shift, and go to state 48
    BOOL_CONST  shift, and go to state 49
    OBJECTID    shift, and go to state 50
    NOT         shift, and go to state 51
    '~'         shift, and go to state 52
    '{'         shift, and go to state 53
    '('         shift, and go to state 54

    expression  go to state 105


state 79

   33 expression: expression '/' . expression

    IF          shift, and go to state 41
    LET         shift, and go to state 42
    WHILE       shift, and go to state 43
    CASE        shift, and go to state 44
    NEW         shift, and go to state 45
    ISVOID      shift, and go to state 46
    STR_CONST   shift, and go to state 47
    INT_CONST   shift, and go to state 48
    BOOL_CONST  shift, and go to state 49
    OBJECTID    shift, and go to state 50
    NOT         shift, and go to state 51
    '~'         shift, and go to state 52
    '{'         shift, and go to state 53
    '('         shift, and go to state 54

    expression  go to state 106


state 80

   18 expression: expression '@' . TYPEID '.' OBJECTID '(' comma_separated_expression_list ')'

    TYPEID  shift, and go to state 107


state 81

   19 expression: expression '.' . OBJECTID '(' comma_separated_expression_list ')'

    OBJECTID  shift, and go to state 108


state 82

   11 feature: OBJECTID ':' TYPEID ASSIGN expression ';' .

    $default  reduce using rule 11 (feature)


state 83

   10 feature: OBJECTID '(' ')' ':' TYPEID '{' expression . '}' ';'
   18 expression: expression . '@' TYPEID '.' OBJECTID '(' comma_separated_expression_list ')'
   19           | expression . '.' OBJECTID '(' comma_separated_expression_list ')'
   30           | expression . '+' expression
   31           | expression . '-' expression
   32           | expression . '*' expression
   33           | expression . '/' expression
   35           | expression . '<' expression
   36           | expression . LE expression
   37           | expression . '=' expression

    LE   shift, and go to state 73
    '<'  shift, and go to state 74
    '='  shift, and go to state 75
    '+'  shift, and go to state 76
    '-'  shift, and go to state 77
    '*'  shift, and go to state 78
    '/'  shift, and go to state 79
    '@'  shift, and go to state 80
    '.'  shift, and go to state 81
    '}'  shift, and go to state 109


state 84

    9 feature: OBJECTID '(' formal_list ')' ':' TYPEID '{' . expression '}' ';'

    IF          shift, and go to state 41
    LET         shift, and go to state 42
    WHILE       shift, and go to state 43
    CASE        shift, and go to state 44
    NEW         shift, and go to state 45
    ISVOID      shift, and go to state 46
    STR_CONST   shift, and go to state 47
    INT_CONST   shift, and go to state 48
    BOOL_CONST  shift, and go to state 49
    OBJECTID    shift, and go to state 50
    NOT         shift, and go to state 51
    '~'         shift, and go to state 52
    '{'         shift, and go to state 53
    '('         shift, and go to state 54

    expression  go to state 110


state 85

   21 expression: IF expression THEN . expression ELSE expression FI

    IF          shift, and go to state 41
    LET         shift, and go to state 42
    WHILE       shift, and go to state 43
    CASE        shift, and go to state 44
    NEW         shift, and go to state 45
    ISVOID      shift, and go to state 46
    STR_CONST   shift, and go to state 47
    INT_CONST   shift, and go to state 48
    BOOL_CONST  shift, and go to state 49
    OBJECTID    shift, and go to state 50
    NOT         shift, and go to state 51
    '~'         shift, and go to state 52
    '{'         shift, and go to state 53
    '('         shift, and go to state 54

    expression  go to state 111


state 86

   53 nested_let: IN . expression

    IF          shift, and go to state 41
    LET         shift, and go to state 42
    WHILE       shift, and go to state 43
    CASE        shift, and go to state 44
    NEW         shift, and go to state 45
    ISVOID      shift, and go to state 46
    STR_CONST   shift, and go to state 47
    INT_CONST   shift, and go to state 48
    BOOL_CONST  shift, and go to state 49
    OBJECTID    shift, and go to state 50
    NOT         shift, and go to state 51
    '~'         shift, and go to state 52
    '{'         shift, and go to state 53
    '('         shift, and go to state 54

    expression  go to state 112


state 87

   54 nested_let: ',' . OBJECTID ':' TYPEID nested_let
   55           | ',' . OBJECTID ':' TYPEID ASSIGN expression nested_let

    OBJECTID  shift, and go to state 113


state 88

   26 expression: LET error nested_let .

    $default  reduce using rule 26 (expression)


state 89

   24 expression: LET OBJECTID ':' . TYPEID nested_let
   25           | LET OBJECTID ':' . TYPEID ASSIGN expression nested_let

    TYPEID  shift, and go to state 114


state 90

   22 expression: WHILE expression LOOP . expression POOL

    IF          shift, and go to state 41
    LET         shift, and go to state 42
    WHILE       shift, and go to state 43
    CASE        shift, and go to state 44
    NEW         shift, and go to state 45
    ISVOID      shift, and go to state 46
    STR_CONST   shift, and go to state 47
    INT_CONST   shift, and go to state 48
    BOOL_CONST  shift, and go to state 49
    OBJECTID    shift, and go to state 50
    NOT         shift, and go to state 51
    '~'         shift, and go to state 52
    '{'         shift, and go to state 53
    '('         shift, and go to state 54

    expression  go to state 115


state 91

   27 expression: CASE expression OF . typcase_list ESAC

    OBJECTID  shift, and go to state 116

    typcase       go to state 117
    typcase_list  go to state 118


state 92

   17 expression: OBJECTID ASSIGN expression .
   18           | expression . '@' TYPEID '.' OBJECTID '(' comma_separated_expression_list ')'
   19           | expression . '.' OBJECTID '(' comma_separated_expression_list ')'
   30           | expression . '+' expression
   31           | expression . '-' expression
   32           | expression . '*' expression
   33           | expression . '/' expression
   35           | expression . '<' expression
   36           | expression . LE expression
   37           | expression . '=' expression

    LE   shift, and go to state 73
    '<'  shift, and go to state 74
    '='  shift, and go to state 75
    '+'  shift, and go to state 76
    '-'  shift, and go to state 77
    '*'  shift, and go to state 78
    '/'  shift, and go to state 79
    '@'  shift, and go to state 80
    '.'  shift, and go to state 81

    $default  reduce using rule 17 (expression)


state 93

   18 expression: expression . '@' TYPEID '.' OBJECTID '(' comma_separated_expression_list ')'
   19           | expression . '.' OBJECTID '(' comma_separated_expression_list ')'
   30           | expression . '+' expression
   31           | expression . '-' expression
   32           | expression . '*' expression
   33           | expression . '/' expression
   35           | expression . '<' expression
   36           | expression . LE expression
   37           | expression . '=' expression
   45 comma_separated_expression_list: expression .

    LE   shift, and go to state 73
    '<'  shift, and go to state 74
    '='  shift, and go to state 75
    '+'  shift, and go to state 76
    '-'  shift, and go to state 77
    '*'  shift, and go to state 78
    '/'  shift, and go to state 79
    '@'  shift, and go to state 80
    '.'  shift, and go to state 81

    $default  reduce using rule 45 (comma_separated_expression_list)


state 94

   20 expression: OBJECTID '(' comma_separated_expression_list . ')'
   46 comma_separated_expression_list: comma_separated_expression_list . ',' expression

    ')'  shift, and go to state 119
    ','  shift, and go to state 120


state 95

   49 semicolon_separated_expression_list: error ';' .

    $default  reduce using rule 49 (semicolon_separated_expression_list)


state 96

   47 semicolon_separated_expression_list: expression ';' .

    $default  reduce using rule 47 (semicolon_separated_expression_list)


state 97

   23 expression: '{' semicolon_separated_expression_list '}' .

    $default  reduce using rule 23 (expression)


state 98

   18 expression: expression . '@' TYPEID '.' OBJECTID '(' comma_separated_expression_list ')'
   19           | expression . '.' OBJECTID '(' comma_separated_expression_list ')'
   30           | expression . '+' expression
   31           | expression . '-' expression
   32           | expression . '*' expression
   33           | expression . '/' expression
   35           | expression . '<' expression
   36           | expression . LE expression
   37           | expression . '=' expression
   48 semicolon_separated_expression_list: semicolon_separated_expression_list expression . ';'

    LE   shift, and go to state 73
    '<'  shift, and go to state 74
    '='  shift, and go to state 75
    '+'  shift, and go to state 76
    '-'  shift, and go to state 77
    '*'  shift, and go to state 78
    '/'  shift, and go to state 79
    '@'  shift, and go to state 80
    '.'  shift, and go to state 81
    ';'  shift, and go to state 121


state 99

   39 expression: '(' expression ')' .

    $default  reduce using rule 39 (expression)


state 100

   18 expression: expression . '@' TYPEID '.' OBJECTID '(' comma_separated_expression_list ')'
   19           | expression . '.' OBJECTID '(' comma_separated_expression_list ')'
   30           | expression . '+' expression
   31           | expression . '-' expression
   32           | expression . '*' expression
   33           | expression . '/' expression
   35           | expression . '<' expression
   36           | expression . LE expression
   36           | expression LE expression .
   37           | expression . '=' expression

    '+'  shift, and go to state 76
    '-'  shift, and go to state 77
    '*'  shift, and go to state 78
    '/'  shift, and go to state 79
    '@'  shift, and go to state 80
    '.'  shift, and go to state 81

    LE   error (nonassociative)
    '<'  error (nonassociative)
    '='  error (nonassociative)

    $default  reduce using rule 36 (expression)


state 101

   18 expression: expression . '@' TYPEID '.' OBJECTID '(' comma_separated_expression_list ')'
   19           | expression . '.' OBJECTID '(' comma_separated_expression_list ')'
   30           | expression . '+' expression
   31           | expression . '-' expression
   32           | expression . '*' expression
   33           | expression . '/' expression
   35           | expression . '<' expression
   35           | expression '<' expression .
   36           | expression . LE expression
   37           | expression . '=' expression

    '+'  shift, and go to state 76
    '-'  shift, and go to state 77
    '*'  shift, and go to state 78
    '/'  shift, and go to state 79
    '@'  shift, and go to state 80
    '.'  shift, and go to state 81

    LE   error (nonassociative)
    '<'  error (nonassociative)
    '='  error (nonassociative)

    $default  reduce using rule 35 (expression)


state 102

   18 expression: expression . '@' TYPEID '.' OBJECTID '(' comma_separated_expression_list ')'
   19           | expression . '.' OBJECTID '(' comma_separated_expression_list ')'
   30           | expression . '+' expression
   31           | expression . '-' expression
   32           | expression . '*' expression
   33           | expression . '/' expression
   35           | expression . '<' expression
   36           | expression . LE expression
   37           | expression . '=' expression
   37           | expression '=' expression .

    '+'  shift, and go to state 76
    '-'  shift, and go to state 77
    '*'  shift, and go to state 78
    '/'  shift, and go to state 79
    '@'  shift, and go to state 80
    '.'  shift, and go to state 81

    LE   error (nonassociative)
    '<'  error (nonassociative)
    '='  error (nonassociative)

    $default  reduce using rule 37 (expression)


state 103

   18 expression: expression . '@' TYPEID '.' OBJECTID '(' comma_separated_expression_list ')'
   19           | expression . '.' OBJECTID '(' comma_separated_expression_list ')'
   30           | expression . '+' expression
   30           | expression '+' expression .
   31           | expression . '-' expression
   32           | expression . '*' expression
   33           | expression . '/' expression
   35           | expression . '<' expression
   36           | expression . LE expression
   37           | expression . '=' expression

    '*'  shift, and go to state 78
    '/'  shift, and go to state 79
    '@'  shift, and go to state 80
    '.'  shift, and go to state 81

    $default  reduce using rule 30 (expression)


state 104

   18 expression: expression . '@' TYPEID '.' OBJECTID '(' comma_separated_expression_list ')'
   19           | expression . '.' OBJECTID '(' comma_separated_expression_list ')'
   30           | expression . '+' expression
   31           | expression . '-' expression
   31           | expression '-' expression .
   32           | expression . '*' expression
   33           | expression . '/' expression
   35           | expression . '<' expression
   36           | expression . LE expression
   37           | expression . '=' expression

    '*'  shift, and go to state 78
    '/'  shift, and go to state 79
    '@'  shift, and go to state 80
    '.'  shift, and go to state 81

    $default  reduce using rule 31 (expression)


state 105

   18 expression: expression . '@' TYPEID '.' OBJECTID '(' comma_separated_expression_list ')'
   19           | expression . '.' OBJECTID '(' comma_separated_expression_list ')'
   30           | expression . '+' expression
   31           | expression . '-' expression
   32           | expression . '*' expression
   32           | expression '*' expression .
   33           | expression . '/' expression
   35           | expression . '<' expression
   36           | expression . LE expression
   37           | expression . '=' expression

    '@'  shift, and go to state 80
    '.'  shift, and go to state 81

    $default  reduce using rule 32 (expression)


state 106

   18 expression: expression . '@' TYPEID '.' OBJECTID '(' comma_separated_expression_list ')'
   19           | expression . '.' OBJECTID '(' comma_separated_expression_list ')'
   30           | expression . '+' expression
   31           | expression . '-' expression
   32           | expression . '*' expression
   33           | expression . '/' expression
   33           | expression '/' expression .
   35           | expression . '<' expression
   36           | expression . LE expression
   37           | expression . '=' expression

    '@'  shift, and go to state 80
    '.'  shift, and go to state 81

    $default  reduce using rule 33 (expression)


state 107

   18 expression: expression '@' TYPEID . '.' OBJECTID '(' comma_separated_expression_list ')'

    '.'  shift, and go to state 122


state 108

   19 expression: expression '.' OBJECTID . '(' comma_separated_expression_list ')'

    '('  shift, and go to state 123


state 109

   10 feature: OBJECTID '(' ')' ':' TYPEID '{' expression '}' . ';'

    ';'  shift, and go to state 124


state 110

    9 feature: OBJECTID '(' formal_list ')' ':' TYPEID '{' expression . '}' ';'
   18 expression: expression . '@' TYPEID '.' OBJECTID '(' comma_separated_expression_list ')'
   19           | expression . '.' OBJECTID '(' comma_separated_expression_list ')'
   30           | expression . '+' expression
   31           | expression . '-' expression
   32           | expression . '*' expression
   33           | expression . '/' expression
   35           | expression . '<' expression
   36           | expression . LE expression
   37           | expression . '=' expression

    LE   shift, and go to state 73
    '<'  shift, and go to state 74
    '='  shift, and go to state 75
    '+'  shift, and go to state 76
    '-'  shift, and go to state 77
    '*'  shift, and go to state 78
    '/'  shift, and go to state 79
    '@'  shift, and go to state 80
    '.'  shift, and go to state 81
    '}'  shift, and go to state 125


state 111

   18 expression: expression . '@' TYPEID '.' OBJECTID '(' comma_separated_expression_list ')'
   19           | expression . '.' OBJECTID '(' comma_separated_expression_list ')'
   21           | IF expression THEN expression . ELSE expression FI
   30           | expression . '+' expression
   31           | expression . '-' expression
   32           | expression . '*' expression
   33           | expression . '/' expression
   35           | expression . '<' expression
   36           | expression . LE expression
   37           | expression . '=' expression

    ELSE  shift, and go to state 126
    LE    shift, and go to state 73
    '<'   shift, and go to state 74
    '='   shift, and go to state 75
    '+'   shift, and go to state 76
    '-'   shift, and go to state 77
    '*'   shift, and go to state 78
    '/'   shift, and go to state 79
    '@'   shift, and go to state 80
    '.'   shift, and go to state 81


state 112

   18 expression: expression . '@' TYPEID '.' OBJECTID '(' comma_separated_expression_list ')'
   19           | expression . '.' OBJECTID '(' comma_separated_expression_list ')'
   30           | expression . '+' expression
   31           | expression . '-' expression
   32           | expression . '*' expression
   33           | expression . '/' expression
   35           | expression . '<' expression
   36           | expression . LE expression
   37           | expression . '=' expression
   53 nested_let: IN expression .

    LE   shift, and go to state 73
    '<'  shift, and go to state 74
    '='  shift, and go to state 75
    '+'  shift, and go to state 76
    '-'  shift, and go to state 77
    '*'  shift, and go to state 78
    '/'  shift, and go to state 79
    '@'  shift, and go to state 80
    '.'  shift, and go to state 81

    $default  reduce using rule 53 (nested_let)


state 113

   54 nested_let: ',' OBJECTID . ':' TYPEID nested_let
   55           | ',' OBJECTID . ':' TYPEID ASSIGN expression nested_let

    ':'  shift, and go to state 127


state 114

   24 expression: LET OBJECTID ':' TYPEID . nested_let
   25           | LET OBJECTID ':' TYPEID . ASSIGN expression nested_let

    IN      shift, and go to state 86
    ASSIGN  shift, and go to state 128
    ','     shift, and go to state 87

    nested_let  go to state 129


state 115

   18 expression: expression . '@' TYPEID '.' OBJECTID '(' comma_separated_expression_list ')'
   19           | expression . '.' OBJECTID '(' comma_separated_expression_list ')'
   22           | WHILE expression LOOP expression . POOL
   30           | expression . '+' expression
   31           | expression . '-' expression
   32           | expression . '*' expression
   33           | expression . '/' expression
   35           | expression . '<' expression
   36           | expression . LE expression
   37           | expression . '=' expression

    POOL  shift, and go to state 130
    LE    shift, and go to state 73
    '<'   shift, and go to state 74
    '='   shift, and go to state 75
    '+'   shift, and go to state 76
    '-'   shift, and go to state 77
    '*'   shift, and go to state 78
    '/'   shift, and go to state 79
    '@'   shift, and go to state 80
    '.'   shift, and go to state 81


state 116

   50 typcase: OBJECTID . ':' TYPEID DARROW expression ';'

    ':'  shift, and go to state 131


state 117

   51 typcase_list: typcase .

    $default  reduce using rule 51 (typcase_list)


state 118

   27 expression: CASE expression OF typcase_list . ESAC
   52 typcase_list: typcase_list . typcase

    ESAC      shift, and go to state 132
    OBJECTID  shift, and go to state 116

    typcase  go to state 133


state 119

   20 expression: OBJECTID '(' comma_separated_expression_list ')' .

    $default  reduce using rule 20 (expression)


state 120

   46 comma_separated_expression_list: comma_separated_expression_list ',' . expression

    IF          shift, and go to state 41
    LET         shift, and go to state 42
    WHILE       shift, and go to state 43
    CASE        shift, and go to state 44
    NEW         shift, and go to state 45
    ISVOID      shift, and go to state 46
    STR_CONST   shift, and go to state 47
    INT_CONST   shift, and go to state 48
    BOOL_CONST  shift, and go to state 49
    OBJECTID    shift, and go to state 50
    NOT         shift, and go to state 51
    '~'         shift, and go to state 52
    '{'         shift, and go to state 53
    '('         shift, and go to state 54

    expression  go to state 134


state 121

   48 semicolon_separated_expression_list: semicolon_separated_expression_list expression ';' .

    $default  reduce using rule 48 (semicolon_separated_expression_list)


state 122

   18 expression: expression '@' TYPEID '.' . OBJECTID '(' comma_separated_expression_list ')'

    OBJECTID  shift, and go to state 135


state 123

   19 expression: expression '.' OBJECTID '(' . comma_separated_expression_list ')'

    IF          shift, and go to state 41
    LET         shift, and go to state 42
    WHILE       shift, and go to state 43
    CASE        shift, and go to state 44
    NEW         shift, and go to state 45
    ISVOID      shift, and go to state 46
    STR_CONST   shift, and go to state 47
    INT_CONST   shift, and go to state 48
    BOOL_CONST  shift, and go to state 49
    OBJECTID    shift, and go to state 50
    NOT         shift, and go to state 51
    '~'         shift, and go to state 52
    '{'         shift, and go to state 53
    '('         shift, and go to state 54

    $default  reduce using rule 44 (comma_separated_expression_list)

    expression                       go to state 93
    comma_separated_expression_list  go to state 136


state 124

   10 feature: OBJECTID '(' ')' ':' TYPEID '{' expression '}' ';' .

    $default  reduce using rule 10 (feature)


state 125

    9 feature: OBJECTID '(' formal_list ')' ':' TYPEID '{' expression '}' . ';'

    ';'  shift, and go to state 137


state 126

   21 expression: IF expression THEN expression ELSE . expression FI

    IF          shift, and go to state 41
    LET         shift, and go to state 42
    WHILE       shift, and go to state 43
    CASE        shift, and go to state 44
    NEW         shift, and go to state 45
    ISVOID      shift, and go to state 46
    STR_CONST   shift, and go to state 47
    INT_CONST   shift, and go to state 48
    BOOL_CONST  shift, and go to state 49
    OBJECTID    shift, and go to state 50
    NOT         shift, and go to state 51
    '~'         shift, and go to state 52
    '{'         shift, and go to state 53
    '('         shift, and go to state 54

    expression  go to state 138


state 127

   54 nested_let: ',' OBJECTID ':' . TYPEID nested_let
   55           | ',' OBJECTID ':' . TYPEID ASSIGN expression nested_let

    TYPEID  shift, and go to state 139


state 128

   25 expression: LET OBJECTID ':' TYPEID ASSIGN . expression nested_let

    IF          shift, and go to state 41
    LET         shift, and go to state 42
    WHILE       shift, and go to state 43
    CASE        shift, and go to state 44
    NEW         shift, and go to state 45
    ISVOID      shift, and go to state 46
    STR_CONST   shift, and go to state 47
    INT_CONST   shift, and go to state 48
    BOOL_CONST  shift, and go to state 49
    OBJECTID    shift, and go to state 50
    NOT         shift, and go to state 51
    '~'         shift, and go to state 52
    '{'         shift, and go to state 53
    '('         shift, and go to state 54

    expression  go to state 140


state 129

   24 expression: LET OBJECTID ':' TYPEID nested_let .

    $default  reduce using rule 24 (expression)


state 130

   22 expression: WHILE expression LOOP expression POOL .

    $default  reduce using rule 22 (expression)


state 131

   50 typcase: OBJECTID ':' . TYPEID DARROW expression ';'

    TYPEID  shift, and go to state 141


state 132

   27 expression: CASE expression OF typcase_list ESAC .

    $default  reduce using rule 27 (expression)


state 133

   52 typcase_list: typcase_list typcase .

    $default  reduce using rule 52 (typcase_list)


state 134

   18 expression: expression . '@' TYPEID '.' OBJECTID '(' comma_separated_expression_list ')'
   19           | expression . '.' OBJECTID '(' comma_separated_expression_list ')'
   30           | expression . '+' expression
   31           | expression . '-' expression
   32           | expression . '*' expression
   33           | expression . '/' expression
   35           | expression . '<' expression
   36           | expression . LE expression
   37           | expression . '=' expression
   46 comma_separated_expression_list: comma_separated_expression_list ',' expression .

    LE   shift, and go to state 73
    '<'  shift, and go to state 74
    '='  shift, and go to state 75
    '+'  shift, and go to state 76
    '-'  shift, and go to state 77
    '*'  shift, and go to state 78
    '/'  shift, and go to state 79
    '@'  shift, and go to state 80
    '.'  shift, and go to state 81

    $default  reduce using rule 46 (comma_separated_expression_list)


state 135

   18 expression: expression '@' TYPEID '.' OBJECTID . '(' comma_separated_expression_list ')'

    '('  shift, and go to state 142


state 136

   19 expression: expression '.' OBJECTID '(' comma_separated_expression_list . ')'
   46 comma_separated_expression_list: comma_separated_expression_list . ',' expression

    ')'  shift, and go to state 143
    ','  shift, and go to state 120


state 137

    9 feature: OBJECTID '(' formal_list ')' ':' TYPEID '{' expression '}' ';' .

    $default  reduce using rule 9 (feature)


state 138

   18 expression: expression . '@' TYPEID '.' OBJECTID '(' comma_separated_expression_list ')'
   19           | expression . '.' OBJECTID '(' comma_separated_expression_list ')'
   21           | IF expression THEN expression ELSE expression . FI
   30           | expression . '+' expression
   31           | expression . '-' expression
   32           | expression . '*' expression
   33           | expression . '/' expression
   35           | expression . '<' expression
   36           | expression . LE expression
   37           | expression . '=' expression

    FI   shift, and go to state 144
    LE   shift, and go to state 73
    '<'  shift, and go to state 74
    '='  shift, and go to state 75
    '+'  shift, and go to state 76
    '-'  shift, and go to state 77
    '*'  shift, and go to state 78
    '/'  shift, and go to state 79
    '@'  shift, and go to state 80
    '.'  shift, and go to state 81


state 139

   54 nested_let: ',' OBJECTID ':' TYPEID . nested_let
   55           | ',' OBJECTID ':' TYPEID . ASSIGN expression nested_let

    IN      shift, and go to state 86
    ASSIGN  shift, and go to state 145
    ','     shift, and go to state 87

    nested_let  go to state 146


state 140

   18 expression: expression . '@' TYPEID '.' OBJECTID '(' comma_separated_expression_list ')'
   19           | expression . '.' OBJECTID '(' comma_separated_expression_list ')'
   25           | LET OBJECTID ':' TYPEID ASSIGN expression . nested_let
   30           | expression . '+' expression
   31           | expression . '-' expression
   32           | expression . '*' expression
   33           | expression . '/' expression
   35           | expression . '<' expression
   36           | expression . LE expression
   37           | expression . '=' expression

    IN   shift, and go to state 86
    LE   shift, and go to state 73
    '<'  shift, and go to state 74
    '='  shift, and go to state 75
    '+'  shift, and go to state 76
    '-'  shift, and go to state 77
    '*'  shift, and go to state 78
    '/'  shift, and go to state 79
    '@'  shift, and go to state 80
    '.'  shift, and go to state 81
    ','  shift, and go to state 87

    nested_let  go to state 147


state 141

   50 typcase: OBJECTID ':' TYPEID . DARROW expression ';'

    DARROW  shift, and go to state 148


state 142

   18 expression: expression '@' TYPEID '.' OBJECTID '(' . comma_separated_expression_list ')'

    IF          shift, and go to state 41
    LET         shift, and go to state 42
    WHILE       shift, and go to state 43
    CASE        shift, and go to state 44
    NEW         shift, and go to state 45
    ISVOID      shift, and go to state 46
    STR_CONST   shift, and go to state 47
    INT_CONST   shift, and go to state 48
    BOOL_CONST  shift, and go to state 49
    OBJECTID    shift, and go to state 50
    NOT         shift, and go to state 51
    '~'         shift, and go to state 52
    '{'         shift, and go to state 53
    '('         shift, and go to state 54

    $default  reduce using rule 44 (comma_separated_expression_list)

    expression                       go to state 93
    comma_separated_expression_list  go to state 149


state 143

   19 expression: expression '.' OBJECTID '(' comma_separated_expression_list ')' .

    $default  reduce using rule 19 (expression)


state 144

   21 expression: IF expression THEN expression ELSE expression FI .

    $default  reduce using rule 21 (expression)


state 145

   55 nested_let: ',' OBJECTID ':' TYPEID ASSIGN . expression nested_let

    IF          shift, and go to state 41
    LET         shift, and go to state 42
    WHILE       shift, and go to state 43
    CASE        shift, and go to state 44
    NEW         shift, and go to state 45
    ISVOID      shift, and go to state 46
    STR_CONST   shift, and go to state 47
    INT_CONST   shift, and go to state 48
    BOOL_CONST  shift, and go to state 49
    OBJECTID    shift, and go to state 50
    NOT         shift, and go to state 51
    '~'         shift, and go to state 52
    '{'         shift, and go to state 53
    '('         shift, and go to state 54

    expression  go to state 150


state 146

   54 nested_let: ',' OBJECTID ':' TYPEID nested_let .

    $default  reduce using rule 54 (nested_let)


state 147

   25 expression: LET OBJECTID ':' TYPEID ASSIGN expression nested_let .

    $default  reduce using rule 25 (expression)


state 148

   50 typcase: OBJECTID ':' TYPEID DARROW . expression ';'

    IF          shift, and go to state 41
    LET         shift, and go to state 42
    WHILE       shift, and go to state 43
    CASE        shift, and go to state 44
    NEW         shift, and go to state 45
    ISVOID      shift, and go to state 46
    STR_CONST   shift, and go to state 47
    INT_CONST   shift, and go to state 48
    BOOL_CONST  shift, and go to state 49
    OBJECTID    shift, and go to state 50
    NOT         shift, and go to state 51
    '~'         shift, and go to state 52
    '{'         shift, and go to state 53
    '('         shift, and go to state 54

    expression  go to state 151


state 149

   18 expression: expression '@' TYPEID '.' OBJECTID '(' comma_separated_expression_list . ')'
   46 comma_separated_expression_list: comma_separated_expression_list . ',' expression

    ')'  shift, and go to state 152
    ','  shift, and go to state 120


state 150

   18 expression: expression . '@' TYPEID '.' OBJECTID '(' comma_separated_expression_list ')'
   19           | expression . '.' OBJECTID '(' comma_separated_expression_list ')'
   30           | expression . '+' expression
   31           | expression . '-' expression
   32           | expression . '*' expression
   33           | expression . '/' expression
   35           | expression . '<' expression
   36           | expression . LE expression
   37           | expression . '=' expression
   55 nested_let: ',' OBJECTID ':' TYPEID ASSIGN expression . nested_let

    IN   shift, and go to state 86
    LE   shift, and go to state 73
    '<'  shift, and go to state 74
    '='  shift, and go to state 75
    '+'  shift, and go to state 76
    '-'  shift, and go to state 77
    '*'  shift, and go to state 78
    '/'  shift, and go to state 79
    '@'  shift, and go to state 80
    '.'  shift, and go to state 81
    ','  shift, and go to state 87

    nested_let  go to state 153


state 151

   18 expression: expression . '@' TYPEID '.' OBJECTID '(' comma_separated_expression_list ')'
   19           | expression . '.' OBJECTID '(' comma_separated_expression_list ')'
   30           | expression . '+' expression
   31           | expression . '-' expression
   32           | expression . '*' expression
   33           | expression . '/' expression
   35           | expression . '<' expression
   36           | expression . LE expression
   37           | expression . '=' expression
   50 typcase: OBJECTID ':' TYPEID DARROW expression . ';'

    LE   shift, and go to state 73
    '<'  shift, and go to state 74
    '='  shift, and go to state 75
    '+'  shift, and go to state 76
    '-'  shift, and go to state 77
    '*'  shift, and go to state 78
    '/'  shift, and go to state 79
    '@'  shift, and go to state 80
    '.'  shift, and go to state 81
    ';'  shift, and go to state 154


state 152

   18 expression: expression '@' TYPEID '.' OBJECTID '(' comma_separated_expression_list ')' .

    $default  reduce using rule 18 (expression)


state 153

   55 nested_let: ',' OBJECTID ':' TYPEID ASSIGN expression nested_let .

    $default  reduce using rule 55 (nested_let)


state 154

   50 typcase: OBJECTID ':' TYPEID DARROW expression ';' .

    $default  reduce using rule 50 (typcase)
